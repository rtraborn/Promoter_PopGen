
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This script in progress for testing on Carbonate
> # must add routine to do with gff3 files
> # current script will work, but requires files in the directory 'human-split-data' be tabix-indexed
> 
> library(PopGenome)
Loading required package: ff
Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: 'bit'

The following object is masked from 'package:base':

    xor

Attaching package ff
- getOption("fftempdir")=="/tmp/Rtmp3k6m4J"

- getOption("ffextension")=="ff"

- getOption("ffdrop")==TRUE

- getOption("fffinonexit")==TRUE

- getOption("ffpagesize")==65536

- getOption("ffcaching")=="mmnoflush"  -- consider "ffeachflush" if your system stalls on large writes

- getOption("ffbatchbytes")==16777216 -- consider a different value for tuning your system

- getOption("ffmaxbytes")==536870912 -- consider a different value for tuning your system


Attaching package: 'ff'

The following objects are masked from 'package:bit':

    clone, clone.default, clone.list

The following objects are masked from 'package:utils':

    write.csv, write.csv2

The following objects are masked from 'package:base':

    is.factor, is.ordered

> library(bigmemory)

Attaching package: 'bigmemory'

The following object is masked from 'package:ff':

    is.readonly

> library(tools)
> 
> ##########################################################################
> #vcfDir <- "/N/dc2/projects/PromoterPopGen/human/human-split-data"	 
> vcfDir <- "/N/dc2/projects/PromoterPopGen/Hs_split_data"
> fileList <- "/N/dc2/projects/PromoterPopGen/human/human-split-data/human_file_list.txt"					 
> file.names <- read.csv(file=fileList, header=FALSE)
> colnames(file.names) <- c("chr", "start", "end", "file")		 
> gffFile <- "/N/u/rtraborn/Carbonate/PromoterPopGen/annotation/Homo_sapiens.GRCh38.90.chromosome.7.gff3"
> popListFile <- "/N/dc2/projects/PromoterPopGen/DmPromoterPopGen/data/human/pop_list_1kGP.csv"					 
> ##########################################################################
> 
> setwd(vcfDir)
> 
> source("/N/dc2/projects/PromoterPopGen/DmPromoterPopGen/scripts/identifiers_to_list.R")
> pop.list <- identifiers_to_list(csv.file=popListFile)
[1] 26
[1] "HG00096" "HG00097" "HG00098" "HG00099" "HG00100" "HG00101"
[1] "HG00171" "HG00173" "HG00174" "HG00176" "HG00177" "HG00178"
[1] "HG00403" "HG00404" "HG00405" "HG00406" "HG00407" "HG00408"
[1] "HG00551" "HG00552" "HG00553" "HG00554" "HG00555" "HG00637"
[1] "HG00759" "HG00766" "HG00844" "HG00851" "HG00864" "HG00866"
[1] "HG01112" "HG01113" "HG01114" "HG01119" "HG01121" "HG01122"
[1] "HG01500" "HG01501" "HG01502" "HG01503" "HG01504" "HG01505"
[1] "HG01565" "HG01566" "HG01567" "HG01571" "HG01572" "HG01573"
[1] "HG01583" "HG01586" "HG01589" "HG01590" "HG01593" "HG01594"
[1] "HG01595" "HG01596" "HG01597" "HG01598" "HG01599" "HG01600"
[1] "HG01879" "HG01880" "HG01881" "HG01882" "HG01883" "HG01884"
[1] "HG02461" "HG02462" "HG02463" "HG02464" "HG02465" "HG02466"
[1] "HG02922" "HG02923" "HG02924" "HG02938" "HG02939" "HG02941"
[1] "HG03006" "HG03007" "HG03008" "HG03009" "HG03012" "HG03585"
[1] "HG03052" "HG03053" "HG03054" "HG03055" "HG03056" "HG03057"
[1] "HG03642" "HG03643" "HG03644" "HG03645" "HG03646" "HG03672"
[1] "HG03713" "HG03714" "HG03715" "HG03716" "HG03717" "HG03718"
[1] "NA06984" "NA06985" "NA06986" "NA06989" "NA06991" "NA06993"
[1] "NA18484" "NA18485" "NA18486" "NA18487" "NA18488" "NA18489"
[1] "NA18525" "NA18526" "NA18527" "NA18528" "NA18530" "NA18531"
[1] "NA18939" "NA18940" "NA18941" "NA18942" "NA18943" "NA18944"
[1] "NA19017" "NA19019" "NA19020" "NA19023" "NA19024" "NA19025"
[1] "NA19625" "NA19700" "NA19701" "NA19702" "NA19703" "NA19704"
[1] "NA19648" "NA19649" "NA19650" "NA19651" "NA19652" "NA19653"
[1] "NA20502" "NA20503" "NA20504" "NA20505" "NA20506" "NA20507"
[1] "NA20845" "NA20846" "NA20847" "NA20849" "NA20850" "NA20851"
> 
> for (i in 1:nrow(file.names)) {
+     print(i)
+     this.string <- file.names[i,]
+     this.chr <- as.character(this.string[1])
+     this.start <- this.string[2]
+     	 if (this.start==0) {
+ 	    this.start <- 1
+ 	    }
+     this.end <- this.string[3]
+     this.filename <- as.character(unlist(this.string[4]))
+     this.filename2 <- file_path_sans_ext(this.filename)
+     diversity_out <- paste(this.filename2, "diversity", sep="_")
+     diversity_filename <- paste(diversity_out, "txt", sep=".")    
+ 
+     #for debugging
+     #print(diversity_filename)
+     #print(this.chr)
+     #print(this.start)
+     #print(this.end)
+     #print(this.filename)
+ 
+     GENOME.class <- readVCF(filename=this.filename, numcols=100000, frompos=this.start, topos=this.end, tid=this.chr, gffpath=gffFile)
+     GENOME.class <- set.populations(GENOME.class, new.populations=pop.list, diploid=TRUE)  
+     split <- split_data_into_GFF_features(GENOME.class, gff.file=gffFile, chr=this.chr, feature="gene")
+     split <- diversity.stats(split, pi=TRUE, keep.site.info=TRUE)
+     nuc.diversity.m <- split@nuc.diversity.within
+     colnames(nuc.diversity.m) <- names(pop.list)
+     write.table(nuc.diversity.m, col.names=TRUE, row.names=FALSE, sep="\t", file=diversity_filename) 
+ 
+     #GENOME.class <- readVCF(filename=thisFileName, numcols=100000, frompos=this.start, topos=this.end, tid=this.chr, gffpath=gffFile)
+     #GENOME.class <- set.populations(GENOME.class, new.populations=pop.list, diploid=TRUE)  
+     #split <- split_data_into_GFF_features(GENOME.class, gff.file=gffFile, chr=this.chr, feature="gene")
+     #split <- diversity.stats(split, pi=TRUE, keep.site.info=TRUE)
+     #nuc.diversity.gene.m <- split@nuc.diversity.within
+     #colnames(nuc.diversity.gene.m) <- names(pop.list)
+     #write.table(nuc.diversity.gene.m, col.names=TRUE, row.names=FALSE, sep="\t", file="chr22_diversity_genes_test.txt")
+ }
[1] 1

GFF information ...
vcff::open : file opened, contains 2504 samples
[1] "Available ContigIdentifiers (parameter tid):"
[1] "7"
|            :            |            :            | 100 %
|====================================================

Concatenate regions 
|            :            |            :            | 100 %
|====================================================
|            :            |            :            | 100 %
|====================================================[1] "Split the data into Features"
|            :            |            :            | 100 %
|===================================================| ;-) 
|            :            |            :            | 100 %
|==
 *** caught segfault ***
address 0x2b00f44fd038, cause 'memory not mapped'

Traceback:
 1: .Call("C_get_sfreqh_C", uniquematrix, matrix_hap[populations[[xx]],     , drop = FALSE])
 2: calc_diversities(bial, populations, pi, keep.site.info)
 3: diversity.stats(split, pi = TRUE, keep.site.info = TRUE)
 4: diversity.stats(split, pi = TRUE, keep.site.info = TRUE)
An irrecoverable exception occurred. R is aborting now ...
